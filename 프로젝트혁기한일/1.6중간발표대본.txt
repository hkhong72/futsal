====== 1번 슬라이드 ======

안녕하세요 1조 발표를 맡게된 이윤후 입니다.

저희 조는 "AWS를 활용한 구장 예약 및 매칭 Web, Application 서비스" 를 만들어보고자 하였습니다.

잘 부탁드립니다.


====== 2번 슬라이드 ======

저희가 준비한 contents 목록입니다. 

프로젝트 개요, 절차 소개 이후 시연 영상이 준비되어 있으며,

기능에 대한 설명이 준비되어 있습니다.


====== 3번 슬라이드 ======

프로젝트 개요 입니다.

기존 서비스의 경우 구장을 예약하고, 타 사이트에서 따로 매칭할 팀을 구하는 과정이 있었습니다.

해당 과정에서 저희 조가 파악한 불편함은 총 3가지 입니다.

매칭 시스템 부재로 예약 사이트가 아닌 타사이트에서 매칭 상대를 구해야 하는 점

매칭 이후에 구장 이용료 정산에 논의해야 하는 점

상대팀에게 직접 팀의 정보를 물어봐야 하는 점이 있습니다.


====== 4번 슬라이드 ======

저희는 이러한 불편함을 개선하기 위해 

매칭 시스템과 커뮤니티의 조화를 위한 퀵메뉴 바

상대팀에 대한 구체적인 정보 제공

상대 확정 시 이용료 정산 자동화

위치 정보제공에 따른 가까운 구장 정보 제공

매칭 관련 알림 전송을 하도록 설계하였습니다. 


====== 5번 슬라이드 ======

다음은 새롭게 만든 매칭 시스템 입니다.

이용자가 구장을 예약할 때 구장을 전부 예약 할 지, 부분으로 예약할 지 선택지를 제공합니다.

부분 대여로 예약 시, 다른 팀이 예약한 구장에 도전 신청을 할수 있으며, 이를 진행하게 되면 해당 팀에 대한 정보가 알림으로 우리 팀에 전송되고

또한, 우리팀이 매칭을 수락하게 되면 양 팀에게 매칭이 확정되었다는 알림이 전송되도록 하였습니다.


====== 6번 슬라이드 ======

수행 절차 및 방법에 대해 설명드리도록 하겠습니다.

보고계신 페이지는 구장을 선택 했을 때 보여지는 페이지 인데요.

날짜, 시간 선택에 따라서 해당 구장의 날씨 정보를 제공하고 있으며 

직관적으로 예약 가능한 시간을 파악 할 수 있도록 색상을 구분하였습니다.

매칭 대기 중인 시간을 선택할 경우 상대팀에 대한 구체적인 정보를 제공합니다.


====== 7번 슬라이드 ======

현재 시스템처럼 처음 구장을 예약하는 팀은 구장 이용료의 만큼의 포인트를 지불하게 되지만, 

부분 대여로 예약 했을 경우, 도전 신청을 진행한 팀에 대한 정보를 토대로 상대 팀을 선택할 권한이 주어지고


====== 8번 슬라이드 ======

원하는 상대를 선택하면 해당 팀에게서 구장 이용료의 절반 포인트만큼 되돌려 받도록 자동화하였습니다.

상대 팀을 선택하고 선택 완료를 누르면


====== 9번 슬라이드 ======

양 팀 모두에게 web, app 환경에서 볼 수 있는 알림을 전송하도록 하였습니다.


====== 10번 슬라이드 ======

다음 으로 시연영상을 보시겠습니다.


====== 11번 슬라이드 (시연 영상) ======





====== 12번 슬라이드 ======

다음은 저희 프로젝트의 전반적인 구성과 기능에 관한 설명입니다.

저희는 Python 의 Selenium, be 라이브러리를 활용하여 크롤링 한 데이터를 

pandas로 가공해 약 1600개의 구장 데이터를 구축하였습니다. 

그리고 스프링부트의 RestTemplate을 사용하여 OpenWeatherAPI에 날씨데이터를 가져오고

Schedular annotation을 이용해 이를 주기적으로 갱신하도록 하였습니다.


====== 13번 슬라이드 ======

다음은 알림 기능에 관한 설명입니다.


우선 모바일의 경우, 구글의 FireBase Cloud Messaging을 사용하여 

앱에서 로그인 시 회원 DB에 FireBase token을 저장하고, 서버 내에 알림을 보내야하는 이벤트가 발생 시

해당 토큰에 알림을 보냄으로써 앱 화면 상단에 알림이 노출될 수 있도록 하였습니다.

하지만 위의 방법으로 앱이 백그라운드 상태일 경우에만 알림이 울리기때문에, 

앱이 포그라운드 상태일 경우에도 알림을 주기위해 앱 내의 broadcast receiver가 요청을 받았을 때 

사용자가 현재 앱을 사용중인지 판별하여 local notification을 구성하도록 하였습니다.


웹의 경우, Spring에서 지원하는 구독/발행 방식의 stomp프로토콜을 사용하여 

사용자가 로그인하는 순간부터 알림을 받아야 하는 이벤트를 구독하고 있도록 하였습니다. 

사용자가 누구인지 알 수 있게 하기위해 interceptor를 구현하여 웹소켓 세션에서 http세션을 접근할 수 있도록 하였고, 

모바일에서도 웹으로 알림을 보낼 수 있게끔 기존의 send to 어노테이션을 사용하는 것에서 

spring에 simplemessagetemplate으로 메세지 전송 방법을 변경하여 구현하였습니다.


====== 14번 슬라이드 ======

저희 서비스는 사용자에게 보다 나은 서비스를 제공하기 위해 회원의 위치정보 제공 동의를 받아, 가까운 구장들을 보여주고 있습니다.

모바일의 경우, 위치권한을 사용을 동의 받은 후에 내장된 GPS를 통해 사용자의 현 위치를 가져오도록 하였으나

웹의 경우, google의 Geolocation API 의 사용조건이 HTTPS와 같은 secure context 였기에 변환 작업이 필요했습니다.

그래서 nginx를 사용한 80포트 변환

route 53을 사용한 dns 설정

Certificate Manager 를 활용한 SSL 인증

load balancer 를 사용하여 443 포트 변환 과정을 통해 HTTPS 프로토콜로 변환하였습니다.


====== 15번 슬라이드 ======

저희 프로젝트에 사용된 기술입니다.

프론트 엔드의 경
오후 3:46 2023-01-05
REST API를 Spring Boot를 통해서 만들었습니다








SWOT

S (장점)
- 매칭가능 (부분대여)
- 직접적인 돈거래를 악용하는 사례들을 예방 ( 노쇼, 허위 글작성  ->> 포인트제도 )
- 팀 서비스로 신뢰할 수 있는 상대방의 정보를 쉽게 시각화
- 웹 & 앱 서비스로 접근성이 좋다
- 앱의 알림서비스로 보다 빠른 매칭 선정가능 

W (단점)
- 개인 단위로 예약하기 어려움
- 매칭 시스템이 서비스를 처음 접한 장년층 고객에게 이해하기 어려울 수 있음
- 타 사이트에서 예약한 경우 확인할 수 없다
(- )

O (기회)
- 풋살장에서 시행중인 장비 대여서비스로 확장가능 
- 특정 지역의 팀들끼리 이벤트대회가능 -> 전국으로 확장가능 (ex.왕중왕전)
- 타 목적으로 구장 대여에 기여가능 (ex.교육용지도, 스포츠학원,이벤트, ...)

T (위협)















처음에는 구조도 한번 설명 싹해주구  (2)

실제로 어느정도 되는지 보여주구 (4) + 시연, 전반적으로돌아가는 ppt를넣는거보다 매칭이니까 시연위주로 끊어서 말하는게 날거같음 // 



매칭 예약 접근성 편의 ** 

아 너네가 예약 만든거 알겠고 그래서 알림이나 뭐 부가기능은 뭔데? >> 여기서 궁금할떄

실제로 진행되는 부분에서 사용자의 편의를 위해 요런것도 넣어봤다 -> 커뮤니티, 날씨, 알림, 상대정보등등 (2)

ex) 기존 예약에서 매칭 + 커뮤니티로 바꿨을 때의 이점 ?? >> 편리성, 게시글에서 매칭 신청도 가능 (접근성)

서버를 쓰는이유, 파이어 베이스 알림을 쓴 이유 >> 매칭 매칭 매칭 예약 주가 되면서

기술 쓴거 알겠어 뭐때메썻냐  // 

실제로 저희가 만든 기술을 직접 보여드리겠습니다

느낀점을 작성하고 QNA


- 많은 구장들과 제휴를 비교적 쉽게 할 수 있는 타사이트, 어플